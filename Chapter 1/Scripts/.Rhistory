linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 2 (gap)
E_individual_kmean_ad_gap <-
fviz_nbclust(E_individual_kmean_ad_m,
kmeans,
method = "gap",
nboot=200,
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 3 (sillhouette)
E_individual_kmean_ad_sil <-
fviz_nbclust(E_individual_kmean_ad_m,
kmeans,
method = "silhouette",
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Merge plots that check optimal # of clusters
E_individual_kmean_ad_all <-
plot_grid(E_individual_kmean_ad_wss,
E_individual_kmean_ad_gap,
E_individual_kmean_ad_sil,
nrow = 1)
# Make a plot that shows clusters
E_individual_kmean_ad_p <-
E_individual_kmean_ad_m |>
kmeans(centers = 2) |>
fviz_cluster(E_individual_kmean_ad_df,
labelsize = 8,
repel = T,
ylab = '% change in MIG',
xlab = 'Proportion of dead fragments (%)',
shape = 16) +
scale_fill_manual(values = rev(color_htol_c)) +
scale_color_manual(values = rev(color_htol_c)) +
coord_fixed() +
theme(panel.grid = element_blank(),
plot.title = element_blank(),
legend.position = 'none',
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25),
panel.grid.major.x = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.x = element_line(colour = 'white',
linewidth = 0.25))
# Edit dataframe to get A. digitifera samples
E_individual_kmean_ad_m <-
D_individual_mort.mig_df |>
filter(Species == 'A. digitifera') |>
select(!Species) |>
column_to_rownames('Colony ID') |>
as.matrix()
# Optimal cluster checking 1 (wss)
E_individual_kmean_ad_wss <-
fviz_nbclust(E_individual_kmean_ad_m,
kmeans,
method = "wss",
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 2 (gap)
E_individual_kmean_ad_gap <-
fviz_nbclust(E_individual_kmean_ad_m,
kmeans,
method = "gap",
nboot=200,
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 3 (sillhouette)
E_individual_kmean_ad_sil <-
fviz_nbclust(E_individual_kmean_ad_m,
kmeans,
method = "silhouette",
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Merge plots that check optimal # of clusters
E_individual_kmean_ad_all <-
plot_grid(E_individual_kmean_ad_wss,
E_individual_kmean_ad_gap,
E_individual_kmean_ad_sil,
nrow = 1)
# Make a plot that shows clusters
E_individual_kmean_ad_p <-
E_individual_kmean_ad_m |>
kmeans(centers = 2) |>
fviz_cluster(E_individual_kmean_ad_df,
labelsize = 8,
repel = T,
ylab = '% change in MIG',
xlab = 'Proportion of dead fragments (%)',
shape = 16) +
scale_fill_manual(values = rev(color_htol_c)) +
scale_color_manual(values = rev(color_htol_c)) +
coord_fixed() +
theme(panel.grid = element_blank(),
plot.title = element_blank(),
legend.position = 'none',
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25),
panel.grid.major.x = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.x = element_line(colour = 'white',
linewidth = 0.25))
# Make a plot that shows clusters
E_individual_kmean_ad_p <-
E_individual_kmean_ad_m |>
kmeans(centers = 2) |>
fviz_cluster(E_individual_kmean_ad_df,
labelsize = 8,
repel = T,
ylab = '% change in MIG',
xlab = 'Proportion of dead fragments (%)',
shape = 16) +
scale_fill_manual(values = rev(color_htol_c)) +
scale_color_manual(values = rev(color_htol_c)) +
coord_fixed() +
theme(panel.grid = element_blank(),
plot.title = element_blank(),
legend.position = 'none',
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25),
panel.grid.major.x = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.x = element_line(colour = 'white',
linewidth = 0.25))
E_individual_kmean_ad_p
# Make a plot that shows clusters
E_individual_kmean_ad_p <-
E_individual_kmean_ad_m |>
kmeans(centers = 2) |>
fviz_cluster(E_individual_kmean_ad_m,
labelsize = 8,
repel = T,
ylab = '% change in MIG',
xlab = 'Proportion of dead fragments (%)',
shape = 16) +
scale_fill_manual(values = rev(color_htol_c)) +
scale_color_manual(values = rev(color_htol_c)) +
coord_fixed() +
theme(panel.grid = element_blank(),
plot.title = element_blank(),
legend.position = 'none',
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25),
panel.grid.major.x = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.x = element_line(colour = 'white',
linewidth = 0.25))
E_individual_kmean_ad_p
# Merge plots
E_individual_kmean_ad_all <-
plot_grid(E_individual_kmean_ad_p,
E_individual_kmean_ad_all,
ncol = 2)
E_individual_kmean_ad_all
# Merge plots that check optimal # of clusters
E_individual_kmean_ad_opt_p <-
plot_grid(E_individual_kmean_ad_wss,
E_individual_kmean_ad_gap,
E_individual_kmean_ad_sil,
nrow = 1)
# Merge plots
E_individual_kmean_ad_all_p <-
plot_grid(E_individual_kmean_ad_p,
E_individual_kmean_ad_opt_p,
ncol = 2)
E_individual_kmean_ad_all_p
# Merge plots
E_individual_kmean_ad_all_p <-
plot_grid(E_individual_kmean_ad_p,
E_individual_kmean_ad_opt_p,
ncol = 2,
rel_heights = c(1,0.5))
E_individual_kmean_ad_all_p
# Merge plots
E_individual_kmean_ad_all_p <-
plot_grid(E_individual_kmean_ad_p,
E_individual_kmean_ad_opt_p,
ncol = 2,
rel_heights = c(1,0.5),
rel_widths = c(1,0.5))
E_individual_kmean_ad_all_p
# Merge plots
E_individual_kmean_ad_all_p <-
plot_grid(E_individual_kmean_ad_p,
E_individual_kmean_ad_opt_p,
ncol = 2,
rel_widths = c(1,0.5))
E_individual_kmean_ad_df |>
write_csv('../Results/Tables/E_individual_kmean_ad_df.csv')
ggsave(E_individual_kmean_ad_all_p,
filename = '../Results/Figures/E_individual_kmean_ad_all_p.png',
dpi = 900,
width = 4000,
height = 4000,
units = "px")
E_individual_kmean_ad_df |>
write_csv('../Results/Tables/E_individual_kmean_ad_df.csv')
ggsave(E_individual_kmean_ad_all_p,
filename = '../Results/Figures/E_individual_kmean_ad_all_p.png',
dpi = 900,
width = 16000,
height = 4000,
units = "px")
ggsave(E_individual_kmean_ad_all_p,
filename = '../Results/Figures/E_individual_kmean_ad_all_p.png',
dpi = 900,
width = 18000,
height = 4000,
units = "px")
# Edit dataframe to get A. millepora samples
E_individual_kmean_am_m <-
D_individual_mort.mig_df |>
filter(Species == 'A. millepora') |>
select(!Species) |>
column_to_rownames('Colony ID') |>
as.matrix()
# Optimal cluster checking 1 (wss)
E_individual_kmean_am_wss <-
fviz_nbclust(E_individual_kmean_am_m,
kmeans,
method = "wss",
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 2 (gap)
E_individual_kmean_am_gap <-
fviz_nbclust(E_individual_kmean_am_m,
kmeans,
method = "gap",
nboot=200,
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 3 (sillhouette)
E_individual_kmean_am_sil <-
fviz_nbclust(E_individual_kmean_am_m,
kmeans,
method = "silhouette",
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Merge plots that check optimal # of clusters
E_individual_kmean_am_opt_p <-
plot_grid(E_individual_kmean_am_wss,
E_individual_kmean_am_gap,
E_individual_kmean_am_sil,
nrow = 1)
# Make a plot that shows clusters
E_individual_kmean_am_p <-
E_individual_kmean_am_m |>
kmeans(centers = 2) |>
fviz_cluster(E_individual_kmean_am_m,
labelsize = 8,
repel = T,
ylab = '% change in MIG',
xlab = 'Proportion of dead fragments (%)',
shape = 16) +
scale_fill_manual(values = rev(color_htol_c)) +
scale_color_manual(values = rev(color_htol_c)) +
coord_fixed() +
theme(panel.grid = element_blank(),
plot.title = element_blank(),
legend.position = 'none',
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25),
panel.grid.major.x = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.x = element_line(colour = 'white',
linewidth = 0.25))
# Extract clusters
E_individual_kmean_am_df <-
E_individual_kmean_am_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(HeatTolerance = if_else(Cluster == 1,
'Low',
'High'))
# Merge plots
E_individual_kmean_am_all_p <-
plot_grid(E_individual_kmean_am_p,
E_individual_kmean_am_opt_p,
ncol = 2,
rel_widths = c(1,0.5))
ggsave(E_individual_kmean_am_all_p,
filename = '../Results/Figures/E_individual_kmean_am_all_p.png',
dpi = 900,
width = 18000,
height = 4000,
units = "px")
E_individual_kmean_am_df |>
write_csv('../Results/Tables/E_individual_kmean_am_df.csv')
# Edit dataframe to get A. tenuis samples
E_individual_kmean_at_m <-
D_individual_mort.mig_df |>
filter(Species == 'A. tenuis') |>
select(!Species) |>
column_to_rownames('Colony ID') |>
as.matrix()
# Optimal cluster checking 1 (wss)
E_individual_kmean_at_wss <-
fviz_nbclust(E_individual_kmean_at_m,
kmeans,
method = "wss",
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 2 (gap)
E_individual_kmean_at_gap <-
fviz_nbclust(E_individual_kmean_at_m,
kmeans,
method = "gap",
nboot=200,
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 3 (sillhouette)
E_individual_kmean_at_sil <-
fviz_nbclust(E_individual_kmean_at_m,
kmeans,
method = "silhouette",
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Merge plots that check optimal # of clusters
E_individual_kmean_at_opt_p <-
plot_grid(E_individual_kmean_at_wss,
E_individual_kmean_at_gap,
E_individual_kmean_at_sil,
nrow = 1)
# Make a plot that shows clusters
E_individual_kmean_at_p <-
E_individual_kmean_at_m |>
kmeans(centers = 2) |>
fviz_cluster(E_individual_kmean_at_m,
labelsize = 8,
repel = T,
ylab = '% change in MIG',
xlab = 'Proportion of dead fragments (%)',
shape = 16) +
scale_fill_manual(values = rev(color_htol_c)) +
scale_color_manual(values = rev(color_htol_c)) +
coord_fixed() +
theme(panel.grid = element_blank(),
plot.title = element_blank(),
legend.position = 'none',
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25),
panel.grid.major.x = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.x = element_line(colour = 'white',
linewidth = 0.25))
# Extract clusters
E_individual_kmean_at_df <-
E_individual_kmean_at_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(HeatTolerance = if_else(Cluster == 1,
'Low',
'High'))
# Merge plots
E_individual_kmean_at_all_p <-
plot_grid(E_individual_kmean_at_p,
E_individual_kmean_at_opt_p,
ncol = 2,
rel_widths = c(1,0.5))
ggsave(E_individual_kmean_at_all_p,
filename = '../Results/Figures/E_individual_kmean_at_all_p.png',
dpi = 900,
width = 18000,
height = 4000,
units = "px")
E_individual_kmean_at_df |>
write_csv('../Results/Tables/E_individual_kmean_at_df.csv')
