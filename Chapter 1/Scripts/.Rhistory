scale_color_manual(values = rev(color_htol_c)) +
coord_fixed() +
theme(panel.grid = element_blank(),
plot.title = element_blank(),
legend.position = 'none',
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25),
panel.grid.major.x = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.x = element_line(colour = 'white',
linewidth = 0.25))
# Extract clusters
E_individual_kmean_am_df <-
E_individual_kmean_am_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(HeatTolerance = if_else(Cluster == 1,
'Low',
'High'))
# Merge plots
E_individual_kmean_am_all_p <-
plot_grid(E_individual_kmean_am_p,
E_individual_kmean_am_opt_p,
ncol = 2,
rel_widths = c(1,0.5))
ggsave(E_individual_kmean_am_all_p,
filename = '../Results/Figures/E_individual_kmean_am_all_p.png',
dpi = 900,
width = 18000,
height = 4000,
units = "px")
E_individual_kmean_am_df |>
write_csv('../Results/Tables/E_individual_kmean_am_df.csv')
# Edit dataframe to get A. tenuis samples
E_individual_kmean_at_m <-
D_individual_mort.mig_df |>
filter(Species == 'A. tenuis') |>
select(!Species) |>
column_to_rownames('Colony ID') |>
as.matrix()
# Optimal cluster checking 1 (wss)
E_individual_kmean_at_wss <-
fviz_nbclust(E_individual_kmean_at_m,
kmeans,
method = "wss",
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 2 (gap)
E_individual_kmean_at_gap <-
fviz_nbclust(E_individual_kmean_at_m,
kmeans,
method = "gap",
nboot=200,
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Optimal cluster checking 3 (sillhouette)
E_individual_kmean_at_sil <-
fviz_nbclust(E_individual_kmean_at_m,
kmeans,
method = "silhouette",
k.max = 10,
linecolor = 'black') +
theme(plot.title = element_blank(),
panel.grid = element_blank(),
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25))
# Merge plots that check optimal # of clusters
E_individual_kmean_at_opt_p <-
plot_grid(E_individual_kmean_at_wss,
E_individual_kmean_at_gap,
E_individual_kmean_at_sil,
nrow = 1)
# Make a plot that shows clusters
E_individual_kmean_at_p <-
E_individual_kmean_at_m |>
kmeans(centers = 2) |>
fviz_cluster(E_individual_kmean_at_m,
labelsize = 8,
repel = T,
ylab = '% change in MIG',
xlab = 'Proportion of dead fragments (%)',
shape = 16) +
scale_fill_manual(values = rev(color_htol_c)) +
scale_color_manual(values = rev(color_htol_c)) +
coord_fixed() +
theme(panel.grid = element_blank(),
plot.title = element_blank(),
legend.position = 'none',
strip.background = element_blank(),
axis.line = element_line(),
panel.background = element_rect(fill = '#F5F5F5'),
panel.grid.major.y = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.y = element_line(colour = 'white',
linewidth = 0.25),
panel.grid.major.x = element_line(colour = 'white',
linewidth = 0.75),
panel.grid.minor.x = element_line(colour = 'white',
linewidth = 0.25))
# Extract clusters
E_individual_kmean_at_df <-
E_individual_kmean_at_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(HeatTolerance = if_else(Cluster == 1,
'Low',
'High'))
# Merge plots
E_individual_kmean_at_all_p <-
plot_grid(E_individual_kmean_at_p,
E_individual_kmean_at_opt_p,
ncol = 2,
rel_widths = c(1,0.5))
ggsave(E_individual_kmean_at_all_p,
filename = '../Results/Figures/E_individual_kmean_at_all_p.png',
dpi = 900,
width = 18000,
height = 4000,
units = "px")
E_individual_kmean_at_df |>
write_csv('../Results/Tables/E_individual_kmean_at_df.csv')
View(E_individual_kmean_am_df)
E_individual_kmean_merged_df <-
bind_rows(E_individual_kmean_ad_df,
E_individual_kmean_am_df,
E_individual_kmean_at_df) |>
mutate(Species = case_when(str_detect(ColonyID, 'D') ~ 'A. digitifera',
str_detect(ColonyID, 'M') ~ 'A. millepora',
str_detect(ColonyID, 'T') ~ 'A. tenuis',
.default = NA)) |>
group_by(Species) |>
arrange(HeatTolerance,
.by_group = T)
pacman::p_load(tidyverse,
broom,
ggbeeswarm,
survminer,
survival,
tidytext,
cowplot,
factoextra)
E_individual_kmean_merged_df <-
bind_rows(E_individual_kmean_ad_df,
E_individual_kmean_am_df,
E_individual_kmean_at_df) |>
mutate(Species = case_when(str_detect(ColonyID, 'D') ~ 'A. digitifera',
str_detect(ColonyID, 'M') ~ 'A. millepora',
str_detect(ColonyID, 'T') ~ 'A. tenuis',
.default = NA)) |>
group_by(Species) |>
arrange(HeatTolerance,
.by_group = T)
View(E_individual_kmean_merged_df)
E_individual_kmean_merged_df |>
write_csv('../Results/Tables/E_individual_kmean_merged_df.csv')
B_individual_mort_rank_df
B_individual_mort_rank_df
View(B_individual_mort_df)
View(B_individual_mort_rank_df)
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
select(!c(1,5,11,12,13))
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(!c(1,5,11,12,13))
View(F_individual_coll_htol_df)
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(!c(1,5,11,12,13))
View(F_individual_coll_htol_df)
View(B_individual_mort_rank_df)
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13))
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13)) |>
rename(3 = 'Percent dead',
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13)) |>
rename(3 = 'Percent dead',
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13)) |>
rename(3 = `Percent dead`,
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13)) |>
rename('Percent dead' = 3,
'Survival-based ranking' = 4,
'Survival based heat tolerance' = 5)
View(C_individual_mig_all_2_df)
C_individual_mig_all_2_df |>
select(3,1,4,5,6)
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13)) |>
rename('Percent dead' = 3,
'Survival-based ranking' = 4,
'Survival-based heat tolerance' = 5) |>
left_join(C_individual_mig_all_2_df |>
select(3,1,4,5,6) |>
rename('Colony' = 2,
'Percent MIG change' = 3,
'MIG-based ranking' = 4,
'MIG-based heat tolerance' = 5))
View(D_individual_mort.mig_df)
View(D_individual_mort.mig_std_p)
View(D_individual_mort.mig_std_df)
D_individual_mort.mig_std_df
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13)) |>
rename('Percent dead' = 3,
'Survival-based ranking' = 4,
'Survival-based heat tolerance' = 5) |>
left_join(C_individual_mig_all_2_df |>
select(3,1,4,5,6) |>
rename('Colony' = 2,
'Percent MIG change' = 3,
'MIG-based ranking' = 4,
'MIG-based heat tolerance' = 5)) |>
left_join(D_individual_mort.mig_std_df |>
select(1,2,5,6,7) |>
rename('Colony' = 2,
'Combined survival and MIG' = 5,
'Survival+MIG-based ranking' = 6,
'Survival+MIG-based heat tolerance' = 7))
D_individual_mort.mig_std_df |>
select(1,2,5,6,7)
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13)) |>
rename('Percent dead' = 3,
'Survival-based ranking' = 4,
'Survival-based heat tolerance' = 5) |>
left_join(C_individual_mig_all_2_df |>
select(3,1,4,5,6) |>
rename('Colony' = 2,
'Percent MIG change' = 3,
'MIG-based ranking' = 4,
'MIG-based heat tolerance' = 5)) |>
left_join(D_individual_mort.mig_std_df |>
select(1,2,5,6,7) |>
rename('Colony' = 2,
'Combined survival and MIG' = 3,
'Survival+MIG-based ranking' = 4,
'Survival+MIG-based heat tolerance' = 5))
F_individual_coll_htol_df
View(F_individual_coll_htol_df)
View(E_individual_kmean_merged_df)
E_individual_kmean_merged_df |>
select(4,1,2,3)
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13)) |>
rename('Percent dead' = 3,
'Survival-based ranking' = 4,
'Survival-based heat tolerance' = 5) |>
left_join(C_individual_mig_all_2_df |>
select(3,1,4,5,6) |>
rename('Colony' = 2,
'Percent MIG change' = 3,
'MIG-based ranking' = 4,
'MIG-based heat tolerance' = 5)) |>
left_join(D_individual_mort.mig_std_df |>
select(1,2,5,6,7) |>
rename('Colony' = 2,
'Combined survival and MIG' = 3,
'Survival+MIG-based ranking' = 4,
'Survival+MIG-based heat tolerance' = 5)) |>
left_join(E_individual_kmean_merged_df |>
select(4,1,2,3) |>
rename('Colony' = 2,
'Kmeans cluster' = 3,
'Kmeans-based heat tolerance' = 4))
View(F_individual_coll_htol_df)
F_individual_coll_htol_df |>
write_csv('../Results/Tables/F_individual_coll_htol_df.csv')
pacman::p_load(tidyverse,
broom,
ggbeeswarm,
survminer,
survival,
tidytext,
cowplot,
factoextra)
View(E_individual_kmean_ad_df)
View(E_individual_kmean_am_df)
pacman::p_load(tidyverse,
broom,
ggbeeswarm,
survminer,
survival,
tidytext,
cowplot,
factoextra)
View(E_individual_kmean_am_df)
View(E_individual_kmean_am_df)
# Extract clusters
E_individual_kmean_am_df <-
E_individual_kmean_am_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(HeatTolerance = if_else(Cluster == 1,
'Low',
'High')) |>
mutate(Cluster = if_else(Cluster == 1,
2,
1))
View(E_individual_kmean_am_df)
# Extract clusters
E_individual_kmean_am_df <-
E_individual_kmean_am_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(Cluster = if_else(Cluster == 1,
2,
1)) |>
mutate(HeatTolerance = if_else(Cluster == 1,
'Low',
'High'))
# Extract clusters
E_individual_kmean_am_df <-
E_individual_kmean_am_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(Cluster = if_else(Cluster == 1,
2,
1)) |>
mutate(HeatTolerance = if_else(Cluster == 2,
'Low',
'High'))
# Extract clusters
E_individual_kmean_am_df <-
E_individual_kmean_am_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(Cluster = if_else(Cluster == 1,
2,
1)) |>
mutate(HeatTolerance = if_else(Cluster == 2,
'High',
'Low'))
View(E_individual_kmean_am_df)
# Extract clusters
E_individual_kmean_am_df <-
E_individual_kmean_am_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(Cluster = if_else(Cluster == 2,
1,
2)) |>
mutate(HeatTolerance = if_else(Cluster == 2,
'High',
'Low'))
View(E_individual_kmean_am_df)
# Extract clusters
E_individual_kmean_am_df <-
E_individual_kmean_am_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(Cluster = if_else(Cluster == 2,
1,
2))
View(E_individual_kmean_am_df)
# Extract clusters
E_individual_kmean_am_df <-
E_individual_kmean_am_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(Cluster = if_else(Cluster == 2,
1,
2)) |>
mutate(HeatTolerance = if_else(Cluster == 2,
'High',
'Low'))
View(E_individual_kmean_am_df)
View(E_individual_kmean_at_df)
# Extract clusters
E_individual_kmean_at_df <-
E_individual_kmean_at_m |>
kmeans(centers = 2) %>%
.$cluster |>
as.data.frame() |>
rownames_to_column() |>
rename(ColonyID = 1,
Cluster = 2) |>
mutate(Cluster = if_else(Cluster == 2,
1,
2)) |>
mutate(HeatTolerance = if_else(Cluster == 2,
'High',
'Low'))
View(E_individual_kmean_at_df)
E_individual_kmean_merged_df <-
bind_rows(E_individual_kmean_ad_df,
E_individual_kmean_am_df,
E_individual_kmean_at_df) |>
mutate(Species = case_when(str_detect(ColonyID, 'D') ~ 'A. digitifera',
str_detect(ColonyID, 'M') ~ 'A. millepora',
str_detect(ColonyID, 'T') ~ 'A. tenuis',
.default = NA)) |>
group_by(Species) |>
arrange(HeatTolerance,
.by_group = T)
#| eval: false
E_individual_kmean_merged_df |>
write_csv('../Results/Tables/E_individual_kmean_merged_df.csv')
F_individual_coll_htol_df <-
B_individual_mort_rank_df |>
ungroup() |>
select(c(1,5,11,12,13)) |>
rename('Percent dead' = 3,
'Survival-based ranking' = 4,
'Survival-based heat tolerance' = 5) |>
left_join(C_individual_mig_all_2_df |>
select(3,1,4,5,6) |>
rename('Colony' = 2,
'Percent MIG change' = 3,
'MIG-based ranking' = 4,
'MIG-based heat tolerance' = 5)) |>
left_join(D_individual_mort.mig_std_df |>
select(1,2,5,6,7) |>
rename('Colony' = 2,
'Combined survival and MIG' = 3,
'Survival+MIG-based ranking' = 4,
'Survival+MIG-based heat tolerance' = 5)) |>
left_join(E_individual_kmean_merged_df |>
select(4,1,2,3) |>
rename('Colony' = 2,
'Kmeans cluster' = 3,
'Kmeans-based heat tolerance' = 4))
#| eval: false
F_individual_coll_htol_df |>
write_csv('../Results/Tables/F_individual_coll_htol_df.csv')
