---
title: "Chapter 2"
format: html
theme: 
  light: zephyr
  dark: cyborg
toc: true
page-layout: full
number-sections: true
number-depth: 3
editor: visual
self-contained: true
---

# Load libraries

```{r}
pacman::p_load(tidyverse,
               janitor,
               vegan,
               ggord,
               ape,
               cowplot,
               pairwiseAdonis,
               tidytext)
```

# A: Import data

Make color palettes.

```{r}
color_species_c <- c("#294557","#558981","#C6BF88")
color_htol_c <- c("#B2182B", "#2166AC")
color_htol_int_c <- c("#B2182B","gray", "#2166AC")
color_its2prof_c <- c("#8c8c8c","#cccccc","#ffc425","#f37735")
```

Make a vector that contains colony IDs that had unresolved heat tolerance.

```{r}
A_unres_c <- c("ATEN07","ATEN08","ATEN09","ATEN24","ATEN25")
```

Import Symbiodiniaceae post-MED sequence data.

```{r}
#| warning: false

# Filtered ITS2 sequences (without D)
A_symb_its2_df <- 
  read_tsv('../Raw/chap02_symportal_230426/post_med_seqs/260_20230428T204810_DBV_20230429T025601.seqs.absolute.abund_and_meta.txt') |> 
  drop_na() |> # remove rows with NA values
  filter(!sample_name %in% A_unres_c) |> 
  select(2,40:last_col()) |> 
  rename(Colony = 1) |> 
  mutate(Species = case_when(str_detect(Colony, 'ATEN') ~ 'A. tenuis',
                            str_detect(Colony, 'AMIL') ~ 'A. millepora',
                            .default = 'A. digitifera')) |> 
  mutate(Colony = case_when(Species == 'A. digitifera' ~ paste0('D', str_sub(Colony,5,6)),
                            Species =='A. tenuis' ~ paste0('T', str_sub(Colony,5,6)),
                            Species == 'A. millepora' ~ paste0('M', str_sub(Colony,5,6)),
                            .default = Colony)) |> 
  relocate(last_col()) |> 
  select(!starts_with("D", ignore.case = F)) |> # Remove D sequences (they are negligible)
  select(!ends_with("D", ignore.case = F)) |> # Remove D sequences (they are negligible)
  type_convert()

# Unfiltered ITS2 sequences
A_symb_its2_all_df <- 
  read_tsv('../Raw/chap02_symportal_230426/post_med_seqs/260_20230428T204810_DBV_20230429T025601.seqs.absolute.abund_and_meta.txt') |> 
  drop_na() |> # remove rows with NA values
  filter(!sample_name %in% A_unres_c) |> 
  select(2,40:last_col()) |> 
  rename(Colony = 1) |> 
  mutate(Species = case_when(str_detect(Colony, 'ATEN') ~ 'A. tenuis',
                            str_detect(Colony, 'AMIL') ~ 'A. millepora',
                            .default = 'A. digitifera')) |> 
  mutate(Colony = case_when(Species == 'A. digitifera' ~ paste0('D', str_sub(Colony,5,6)),
                            Species =='A. tenuis' ~ paste0('T', str_sub(Colony,5,6)),
                            Species == 'A. millepora' ~ paste0('M', str_sub(Colony,5,6)),
                            .default = Colony)) |> 
  relocate(last_col()) |> 
  type_convert()
```

Import Symbiodiniaceae predicted ITS2 profiles.

```{r}
#| warning: false
A_symb_prof_df <- 
  read_tsv('../Raw/chap02_symportal_230426/its2_type_profiles/its2_profiles_copy.txt') |> 
  row_to_names(6) |>
  drop_na() |> 
  rename(Colony = 2) |> 
  filter(!Colony %in% A_unres_c) |> 
  select(!1) |> 
  mutate(Species = case_when(str_detect(Colony, 'ATEN') ~ 'A. tenuis',
                            str_detect(Colony, 'AMIL') ~ 'A. millepora',
                            .default = 'A. digitifera')) |> 
  mutate(Colony = case_when(Species == 'A. digitifera' ~ paste0('D', str_sub(Colony,5,6)),
                            Species =='A. tenuis' ~ paste0('T', str_sub(Colony,5,6)),
                            Species == 'A. millepora' ~ paste0('M', str_sub(Colony,5,6)),
                            .default = Colony)) |> 
  relocate(last_col()) |> 
  type_convert()
```

Import heat tolerance data.

```{r}
#| warning: false

A_symb_htol_df <- 
  read_csv('../Raw/chap01/F_individual_coll_htol_df.csv') |> 
  rename('mor'=5, 
         'mig'=8, 
         'mor.mig'=11, 
         'kmeans'=13)
```

# B: Beta diversity

## dbRDA

### BC

Get ITS2 sequence data and heat tolerance metadata.

```{r}
B_beta_its2_df <- 
  A_symb_its2_df |> 
  column_to_rownames('Colony') |> 
  select(!1)

B_beta_htol_df <- 
  A_symb_htol_df |> 
  column_to_rownames('Colony') |> 
  select_if((is.numeric)) |> 
  rename('mor' = 1, 
         'mig' = 3,
         'mor.mig' = 5)
```

Do dbRDA.

```{r}
#| warning: false
B_beta_its2_dbrda <- 
  dbrda(B_beta_its2_df ~ mor + 
          mig + 
          `mor.mig`,
        data = B_beta_htol_df,
        distance = "bray")

B_beta_its2_dbrda_p <-
  ggord(B_beta_its2_dbrda, A_symb_htol_df$Species,
        arrow = 0.15, 
        col = color_species_c,
        size = 3, 
        txt = 3,
        repel = T,
        hull = F,
        ellipse = F,
        alpha = 0.75) +
  geom_hline(yintercept = 0,
             color = 'gray',
             linewidth = 0.5,
             alpha = 0.5) +
  geom_vline(xintercept = 0,
             color = 'gray',
             linewidth = 0.5,
             alpha = 0.5) +
  labs(x = 'dbRDA1 (95.08%)',
       y = 'dbRDA2 (3.21%)') +
  scale_y_continuous(limits = c(-0.8, 1.25),
                     expand = c(0,0)) +
  scale_x_continuous(limits = c(-0.75, 1.25),
                     expand = c(0,0)) +
  theme_classic() +
  theme(panel.grid = element_blank(),
        strip.background = element_blank(),
        axis.line = element_line(),
        panel.background = element_rect(fill = '#F5F5F5'),
        panel.grid.major.y = element_line(colour = 'white',
                                          linewidth = 0.75),
        panel.grid.minor.y = element_line(colour = 'white',
                                          linewidth = 0.25),
        panel.grid.major.x = element_line(colour = 'white',
                                          linewidth = 0.75),
        panel.grid.minor.x = element_line(colour = 'white',
                                          linewidth = 0.25),
        strip.text = element_text(face = 'italic'))
```

Manually export the dbRDA results above.

Export plot.

```{r}
ggsave(plot = B_beta_its2_dbrda_p,
       filename = '../Results/Figures/B_beta_its2_dbrda.png',
       dpi = 900,
       width = 6500, 
       height = 3500, 
       units = "px")
```

### wUni

Clean weighted Unifrac distance matrix and heat tolerance metadata.

```{r}
B_beta_wuni_its2_d <- 
  C_beta_wuni_df |> 
  column_to_rownames("Colony") |> 
  vegdist()

B_beta_wuni_htol_df <- 
  A_symb_htol_df |> 
  column_to_rownames('Colony') |> 
  select_if((is.numeric)) |> 
  rename('mor' = 1, 
         'mig' = 3,
         'mor.mig' = 5)
```

Do dbRDA.

```{r}
#| warning: false
B_beta_wuni_its2_dbrda <- 
  dbrda(B_beta_wuni_its2_d ~ mor + 
          mig + 
          `mor.mig`,
        data = B_beta_wuni_htol_df)

B_beta_wuni_its2_dbrda_p <-
  ggord(B_beta_wuni_its2_dbrda, 
        A_symb_htol_df$Species,
        arrow = 0.15, 
        col = color_species_c,
        size = 3, 
        txt = 3,
        repel = T,
        hull = F,
        ellipse = F,
        alpha = 0.75) +
  geom_hline(yintercept = 0,
             color = 'gray',
             linewidth = 0.5,
             alpha = 0.5) +
  geom_vline(xintercept = 0,
             color = 'gray',
             linewidth = 0.5,
             alpha = 0.5) +
  labs(x = 'dbRDA1 (99.61%)',
       y = 'dbRDA2 (0.31%)') +
  scale_y_continuous(limits = c(-2, 2),
                     expand = c(0,0)) +
  scale_x_continuous(limits = c(-2, 2),
                     expand = c(0,0)) +
  theme_classic() +
  theme(panel.grid = element_blank(),
        strip.background = element_blank(),
        axis.line = element_line(),
        panel.background = element_rect(fill = '#F5F5F5'),
        panel.grid.major.y = element_line(colour = 'white',
                                          linewidth = 0.75),
        panel.grid.minor.y = element_line(colour = 'white',
                                          linewidth = 0.25),
        panel.grid.major.x = element_line(colour = 'white',
                                          linewidth = 0.75),
        panel.grid.minor.x = element_line(colour = 'white',
                                          linewidth = 0.25),
        strip.text = element_text(face = 'italic'))
```

Manually export the dbRDA results above.

Export plot.

```{r}
ggsave(plot = B_beta_wuni_its2_dbrda_p,
       filename = '../Results/Figures/B_beta_wuni_its2_dbrda.png',
       dpi = 900,
       width = 6500, 
       height = 3500, 
       units = "px")
```

## PCoA (BC)

Make a function that separately makes distance per species.

```{r}
B_beta_its2_bc_f <-
  function(df, species){
    df |> 
      column_to_rownames('Colony') |> 
      filter(Species == species) |> 
      select(!1) |> 
      vegdist()
  }
```

Compute Bray-Curtis dissimilarity.

*A. digitifera*

```{r}
B_beta_its2_ad_bc <- 
  B_beta_its2_bc_f(A_symb_its2_df, 'A. digitifera')
```

*A. millepora*

```{r}
B_beta_its2_am_bc <- 
  B_beta_its2_bc_f(A_symb_its2_df, 'A. millepora')
```

*A. tenuis*

```{r}
B_beta_its2_at_bc <- 
  B_beta_its2_bc_f(A_symb_its2_df, 'A. tenuis')
```

Make a function for computing PCoA (and getting relative contribution of the PCo).

```{r}
B_beta_pcoa_df_f <- 
  function(distance){
    vectors <- 
      distance |>
      cmdscale(eig = T) |> 
      pluck('points') |> 
      as.data.frame() |> 
      rownames_to_column() |> 
      rename(Colony = 1)
  }

B_beta_pcoa_eig_df_f <- 
  function(distance){
    rel_eig <- 
      distance |>
      cmdscale(eig = T) |> 
      pluck('eig') |> 
      as.data.frame() |> 
      rename(eig = 1) |> 
      mutate(rel_eig = eig/sum(eig) * 100) |>
      pull(rel_eig)
  }
```

Extract PCoA data.

```{r}
# A. digitifera.
B_beta_its2_ad_pcoa_df <- 
  B_beta_its2_ad_bc |> 
  B_beta_pcoa_df_f() |> 
  left_join(A_symb_htol_df |> 
              filter(Species == 'A. digitifera'))

# A. millepora
B_beta_its2_am_pcoa_df <- 
  B_beta_its2_am_bc |> 
  B_beta_pcoa_df_f() |> 
  left_join(A_symb_htol_df |> 
              filter(Species == 'A. millepora'))

# A. tenuis
B_beta_its2_at_pcoa_df <- 
  B_beta_its2_at_bc |> 
  B_beta_pcoa_df_f() |> 
  left_join(A_symb_htol_df |> 
              filter(Species == 'A. tenuis'))
```

Make a function for a customized PCoA plot.

```{r}
B_beta_its2_pcoa_f <- 
  function(df, basis){
    df |> 
      ggplot(aes(x = V1,
                 y = V2,
                 color = {{basis}})) +
      geom_hline(yintercept = 0,
                 color = 'gray',
                 linewidth = 0.5) +
      geom_vline(xintercept = 0,
                 color = 'gray',
                 linewidth = 0.5) +
      geom_point(size = 3,
                 alpha = 0.75)  +
      theme(panel.grid = element_blank(),
            strip.background = element_blank(),
            axis.line = element_line(),
            panel.background = element_rect(fill = '#F5F5F5'),
            panel.grid.major.y = element_line(colour = 'white',
                                              linewidth = 0.75),
            panel.grid.minor.y = element_line(colour = 'white',
                                              linewidth = 0.25),
            panel.grid.major.x = element_line(colour = 'white',
                                              linewidth = 0.75),
            panel.grid.minor.x = element_line(colour = 'white',
                                              linewidth = 0.25),
            strip.text = element_text(face = 'italic'))
  }
```

### Mortality-based

```{r}
# A. digitifera
B_beta_its2_ad_mor_p <- 
  B_beta_its2_ad_pcoa_df |> 
  B_beta_its2_pcoa_f(mor) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_ad_bc)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_ad_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. digitifera') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. millepora
B_beta_its2_am_mor_p <- 
  B_beta_its2_am_pcoa_df |> 
  B_beta_its2_pcoa_f(mor) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  format(round(B_beta_pcoa_eig_df_f(B_beta_its2_am_bc)[1],2), nsmall = 2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_am_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. millepora') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. tenuis
B_beta_its2_at_mor_p <- 
  B_beta_its2_at_pcoa_df |> 
  B_beta_its2_pcoa_f(mor) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_at_bc)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_at_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. tenuis') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# Merged
B_beta_its2_mor_p <- 
  plot_grid(nrow = 1,
            B_beta_its2_ad_mor_p,
            B_beta_its2_am_mor_p,
            B_beta_its2_at_mor_p)
```

Export.

```{r}
ggsave(plot = B_beta_its2_mor_p,
       filename = '../Results/Figures/B_beta_bc_its2_mor.png',
       dpi = 900,
       width = 14000, 
       height = 3500, 
       units = "px")
```

### MIG-based

```{r}
# A. digitifera
B_beta_its2_ad_mig_p <- 
  B_beta_its2_ad_pcoa_df |> 
  B_beta_its2_pcoa_f(mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_ad_bc)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_ad_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. digitifera') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. millepora
B_beta_its2_am_mig_p <- 
  B_beta_its2_am_pcoa_df |> 
  B_beta_its2_pcoa_f(mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  format(round(B_beta_pcoa_eig_df_f(B_beta_its2_am_bc)[1],2), nsmall = 2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_am_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. millepora') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. tenuis
B_beta_its2_at_mig_p <- 
  B_beta_its2_at_pcoa_df |> 
  B_beta_its2_pcoa_f(mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_at_bc)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_at_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. tenuis') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# Merged
B_beta_its2_mig_p <- 
  plot_grid(nrow = 1,
            B_beta_its2_ad_mig_p,
            B_beta_its2_am_mig_p,
            B_beta_its2_at_mig_p)
```

Export.

```{r}
ggsave(plot = B_beta_its2_mig_p,
       filename = '../Results/Figures/B_beta_bc_its2_mig.png',
       dpi = 900,
       width = 14000, 
       height = 3500,
       units = "px")
```

### Mortality+MIG-based

```{r}
# A. digitifera
B_beta_its2_ad_mor.mig_p <- 
  B_beta_its2_ad_pcoa_df |> 
  B_beta_its2_pcoa_f(mor.mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_ad_bc)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_ad_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. digitifera') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. millepora
B_beta_its2_am_mor.mig_p <- 
  B_beta_its2_am_pcoa_df |> 
  B_beta_its2_pcoa_f(mor.mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  format(round(B_beta_pcoa_eig_df_f(B_beta_its2_am_bc)[1],2), nsmall = 2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_am_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. millepora') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. tenuis
B_beta_its2_at_mor.mig_p <- 
  B_beta_its2_at_pcoa_df |> 
  B_beta_its2_pcoa_f(mor.mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_at_bc)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_at_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. tenuis') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# Merged
B_beta_its2_mor.mig_p <- 
  plot_grid(nrow = 1,
            B_beta_its2_ad_mor.mig_p,
            B_beta_its2_am_mor.mig_p,
            B_beta_its2_at_mor.mig_p)
```

Export.

```{r}
ggsave(plot = B_beta_its2_mor.mig_p,
       filename = '../Results/Figures/B_beta_bc_its2_mor.mig.png',
       dpi = 900,
       width = 14000, 
       height = 3500, 
       units = "px")
```

### Kmeans-based

```{r}
# A. digitifera
B_beta_its2_ad_kmeans_p <- 
  B_beta_its2_ad_pcoa_df |> 
  B_beta_its2_pcoa_f(kmeans) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_ad_bc)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_ad_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. digitifera') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. millepora
B_beta_its2_am_kmeans_p <- 
  B_beta_its2_am_pcoa_df |> 
  B_beta_its2_pcoa_f(kmeans) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  format(round(B_beta_pcoa_eig_df_f(B_beta_its2_am_bc)[1],2), nsmall = 2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_am_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. millepora') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. tenuis
B_beta_its2_at_kmeans_p <- 
  B_beta_its2_at_pcoa_df |> 
  B_beta_its2_pcoa_f(kmeans) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_at_bc)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(B_beta_its2_at_bc)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. tenuis') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# Merged
B_beta_its2_kmeans_p <- 
  plot_grid(nrow = 1,
            B_beta_its2_ad_kmeans_p,
            B_beta_its2_am_kmeans_p,
            B_beta_its2_at_kmeans_p)
```

Export.

```{r}
ggsave(plot = B_beta_its2_kmeans_p,
       filename = '../Results/Figures/B_beta_bc_its2_kmeans.png',
       dpi = 900,
       width = 14000, 
       height = 3500, 
       units = "px")
```

## C: PCoA (wUni)

Import weighted Unifrac distance matrix computed by Symportal.

```{r}
C_beta_wuni_m <- 
  read_tsv('../Raw/chap02_symportal_230426/between_sample_distances/C/20230429T025601_unifrac_sample_distances_C_no_sqrt.dist',col_names = F) |> 
  select(!2)
```

Clean matrix.

```{r}
column_names <- 
  C_beta_wuni_m |> 
  pull(1) %>%
  c('Colony',.)

C_beta_wuni_df <- 
  read_tsv('../Raw/chap02_symportal_230426/between_sample_distances/C/20230429T025601_unifrac_sample_distances_C_no_sqrt.dist',col_names = F) |> 
  select(!2) |> 
  `colnames<-`(column_names) |> 
  filter(!Colony %in% A_unres_c) |> 
  select(!all_of(A_unres_c))
```

Rename colony IDs.

```{r}
column_names_2 <- 
  C_beta_wuni_df |> 
  pull(1) %>%
  c('Colony',.) |> 
  str_replace('ADIG', 'D') |> 
  str_replace('ATEN', 'T') |> 
  str_replace('AMIL', 'M')

C_beta_wuni_df <- 
  C_beta_wuni_df |> 
  `colnames<-`(column_names_2) |> 
  mutate(Colony = str_replace(Colony,'ADIG', 'D'),
         Colony = str_replace(Colony,'ATEN', 'T'),
         Colony = str_replace(Colony,'AMIL', 'M'))
```

Convert to distance.

```{r}
C_beta_wuni_d <- 
  C_beta_wuni_df |> 
  column_to_rownames('Colony') |> 
  as.dist()
```

Arrange heat tolerance metadata.

```{r}
C_symb_htol_df <- 
  B_beta_htol_df |> 
  rownames_to_column('Colony') |> 
  arrange(Colony) |> 
  column_to_rownames('Colony')
```

Make a function that filters dataframe based on species.

```{r}
C_beta_species_f <- 
  function(df, species){
    df2 <- 
      df |> 
      filter(str_detect(Colony, species))
    
    c <- 
      df2 |> 
      pull(Colony)
      
    df3 <- 
      df2 |> 
      select(all_of(c)) |> 
      as.dist()
    
    return(df3)
  }
```

Make distance data per species.

```{r}
# A. digitifera
C_beta_wuni_ad_d <- 
  C_beta_wuni_df |> 
  C_beta_species_f('D')

# A. millepora
C_beta_wuni_am_d <- 
  C_beta_wuni_df |> 
  C_beta_species_f('M')

# A. tenuis
C_beta_wuni_at_d <- 
  C_beta_wuni_df |> 
  C_beta_species_f('T')
```

Prepare PCoA data.

```{r}
# A. digitifera
C_beta_wuni_ad_pcoa_df <- 
  C_beta_wuni_ad_d |> 
  B_beta_pcoa_df_f() |> 
  left_join(A_symb_htol_df |> 
              arrange(Colony) |> 
              filter(Species == 'A. digitifera'))

# A. millepora
C_beta_wuni_am_pcoa_df <- 
  C_beta_wuni_am_d |> 
  B_beta_pcoa_df_f() |> 
  left_join(A_symb_htol_df |> 
              arrange(Colony) |> 
              filter(Species == 'A. millepora'))

# A. tenuis
C_beta_wuni_at_pcoa_df <- 
  C_beta_wuni_at_d |> 
  B_beta_pcoa_df_f() |> 
  left_join(A_symb_htol_df |> 
              arrange(Colony) |> 
              filter(Species == 'A. tenuis'))
```

### Mortality-based

```{r}
# A. digitifera
C_beta_wuni_ad_mor_p <- 
  C_beta_wuni_ad_pcoa_df |> 
  B_beta_its2_pcoa_f(mor) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_ad_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_ad_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. digitifera') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. millepora
C_beta_wuni_am_mor_p <- 
  C_beta_wuni_am_pcoa_df |> 
  B_beta_its2_pcoa_f(mor) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_am_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_am_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. millepora') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. tenuis
C_beta_wuni_at_mor_p <- 
  C_beta_wuni_at_pcoa_df |> 
  B_beta_its2_pcoa_f(mor) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_at_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_at_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. tenuis') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# Merged
C_beta_wuni_mor_p <- 
  plot_grid(nrow = 1,
            C_beta_wuni_ad_mor_p,
            C_beta_wuni_am_mor_p,
            C_beta_wuni_at_mor_p)
```

Export.

```{r}
ggsave(plot = C_beta_wuni_mor_p,
       filename = '../Results/Figures/C_beta_wuni_mor.png',
       dpi = 900,
       width = 14000, 
       height = 3500, 
       units = "px")
```

### MIG-based

```{r}
# A. digitifera
C_beta_wuni_ad_mig_p <- 
  C_beta_wuni_ad_pcoa_df |> 
  B_beta_its2_pcoa_f(mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_ad_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_ad_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. digitifera') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. millepora
C_beta_wuni_am_mig_p <- 
  C_beta_wuni_am_pcoa_df |> 
  B_beta_its2_pcoa_f(mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_am_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_am_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. millepora') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. tenuis
C_beta_wuni_at_mig_p <- 
  C_beta_wuni_at_pcoa_df |> 
  B_beta_its2_pcoa_f(mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_at_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_at_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. tenuis') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# Merged
C_beta_wuni_mig_p <- 
  plot_grid(nrow = 1,
            C_beta_wuni_ad_mig_p,
            C_beta_wuni_am_mig_p,
            C_beta_wuni_at_mig_p)
```

Export.

```{r}
ggsave(plot = C_beta_wuni_mig_p,
       filename = '../Results/Figures/C_beta_wuni_mig.png',
       dpi = 900,
       width = 14000, 
       height = 3500, 
       units = "px")
```

### Mortality+MIG-based

```{r}
# A. digitifera
C_beta_wuni_ad_mor.mig_p <- 
  C_beta_wuni_ad_pcoa_df |> 
  B_beta_its2_pcoa_f(mor.mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_ad_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_ad_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. digitifera') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. millepora
C_beta_wuni_am_mor.mig_p <- 
  C_beta_wuni_am_pcoa_df |> 
  B_beta_its2_pcoa_f(mor.mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_am_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_am_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. millepora') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. tenuis
C_beta_wuni_at_mor.mig_p <- 
  C_beta_wuni_at_pcoa_df |> 
  B_beta_its2_pcoa_f(mor.mig) +
  scale_color_manual(values = color_htol_int_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_at_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_at_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. tenuis') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# Merged
C_beta_wuni_mor.mig_p <- 
  plot_grid(nrow = 1,
            C_beta_wuni_ad_mor.mig_p,
            C_beta_wuni_am_mor.mig_p,
            C_beta_wuni_at_mor.mig_p)
```

Export.

```{r}
ggsave(plot = C_beta_wuni_mor.mig_p,
       filename = '../Results/Figures/C_beta_wuni_mor.mig.png',
       dpi = 900,
       width = 14000, 
       height = 3500, 
       units = "px")
```

### Kmeans-based

```{r}
# A. digitifera
C_beta_wuni_ad_kmeans_p <- 
  C_beta_wuni_ad_pcoa_df |> 
  B_beta_its2_pcoa_f(kmeans) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_ad_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_ad_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. digitifera') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. millepora
C_beta_wuni_am_kmeans_p <- 
  C_beta_wuni_am_pcoa_df |> 
  B_beta_its2_pcoa_f(kmeans) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_am_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_am_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. millepora') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# A. tenuis
C_beta_wuni_at_kmeans_p <- 
  C_beta_wuni_at_pcoa_df |> 
  B_beta_its2_pcoa_f(kmeans) +
  scale_color_manual(values = color_htol_c) +
  labs(x = paste0('PCo1 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_at_d)[1],2),
                  '%)'),
       y = paste0('PCo2 (', 
                  round(B_beta_pcoa_eig_df_f(C_beta_wuni_at_d)[2],2),
                  '%)'),
       color = 'Heat tolerance',
       subtitle = 'A. tenuis') +
  theme(plot.subtitle = element_text(face = 'italic',
                                     hjust = 0.5))

# Merged
C_beta_wuni_kmeans_p <- 
  plot_grid(nrow = 1,
            C_beta_wuni_ad_kmeans_p,
            C_beta_wuni_am_kmeans_p,
            C_beta_wuni_at_kmeans_p)
```

Export.

```{r}
ggsave(plot = C_beta_wuni_kmeans_p,
       filename = '../Results/Figures/C_beta_wuni_kmeans.png',
       dpi = 900,
       width = 14000, 
       height = 3500, 
       units = "px")
```

## D: PERMANOVA

### BC

#### Global (all species)

```{r}
D_beta_bc_all_d <- 
  B_beta_its2_df |> 
  rownames_to_column("Colony") |> 
  arrange(Colony) |> 
  column_to_rownames("Colony") |> 
  vegdist()
  
D_beta_bc_meta <- 
  A_symb_htol_df |> 
  arrange(Colony) |> 
  column_to_rownames("Colony")

D_beta_bc_spec_pmanova <- 
  adonis2(D_beta_bc_all_d ~ Species,
          data = D_beta_bc_meta,
          permuations = 9999)
```

Export.

```{r}
write_csv(D_beta_bc_spec_pmanova,
          '../Results/Tables/D_beta_bc_spec_pmanova_global.csv')
```

Pairwise.

```{r}
D_beta_bc_pwis_spec_pmanova <- 
    pairwise.adonis2(D_beta_bc_all_d ~ Species, 
                     data = D_beta_bc_meta, 
                     permutations = 9999)
```

Make a function that collapses the lists into 1 dataframe (for reporting).

```{r}
D_beta_bc_pwis_pmanova_clean_f <- 
  function(pmanova_res){
    a <- 
      pmanova_res[-1] |> 
      bind_rows(.id = 'groups') |> 
      drop_na() %>%
      .$`Pr(>F)` |> 
      p.adjust(method = 'BH') 
    
    b <- 
      unique(pmanova_res[-1] |> 
               bind_rows(.id = 'groups'))$groups |> 
      unique()
      
    d <- 
       a %>% 
        data.frame(b,.) |> 
        rename('groups' = 1,
               `P-adjusted` = 2) %>% 
        left_join(pmanova_res[-1] |> 
                    bind_rows(.id = 'groups'), 
                  ., 
                  by = 'groups') |> 
        mutate(`P-adjusted` = case_when(is.na(`Pr(>F)`) ~ NA,
                                        .default = `P-adjusted`)) |> 
        add_column(c('','Residual', 'Total') |> 
                     c(c('','Residual', 'Total')) |> 
                     c(c('','Residual', 'Total'))) |> 
        mutate(groups = case_when(`c(...)` == 'Residual' ~ 'Residual',
                                  `c(...)` == 'Total' ~ 'Total',
                                  .default = groups)) |> 
        select(!last_col())
    
    return(d)
  }
```

Get clean pairwise PERMANOVA results.

```{r}
D_beta_bc_pwis_spec_pmanova_df <- 
  D_beta_bc_pwis_pmanova_clean_f(D_beta_bc_pwis_spec_pmanova)
```

Export.

```{r}
write_csv(D_beta_bc_pwis_spec_pmanova_df,
          '../Results/Tables/D_beta_bc_spec_pmanova_pwise.csv')
```

#### Per species

*A. digitifera.*

```{r}
# BC distance matrix
D_beta_bc_ad_d <- 
  B_beta_its2_df |> 
  rownames_to_column("Colony") |>  
  filter(str_detect(Colony, 'D')) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony") |> 
  vegdist()

# Metadata
D_beta_bc_ad_meta <- 
  A_symb_htol_df |> 
  filter(str_detect(Colony, 'D')) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony")

# PERMANOVA
D_beta_bc_ad_mor_pmanova <- 
  adonis2(D_beta_bc_ad_d ~ mor, 
          data = D_beta_bc_ad_meta, 
          permutations = 9999)|> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality-based')

D_beta_bc_ad_mig_pmanova <- 
  adonis2(D_beta_bc_ad_d ~ mig, 
          data = D_beta_bc_ad_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'MIG-based')

D_beta_bc_ad_mor.mig_pmanova <- 
  adonis2(D_beta_bc_ad_d ~ mor.mig, 
          data = D_beta_bc_ad_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality+MIG-based')

D_beta_bc_ad_kmeans_pmanova <- 
  adonis2(D_beta_bc_ad_d ~ kmeans, 
          data = D_beta_bc_ad_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Kmeans-based')

# Merge PERMANOVA data
D_beta_bc_ad_all_pmanova <- 
  bind_rows(D_beta_bc_ad_mor_pmanova,
            D_beta_bc_ad_mig_pmanova,
            D_beta_bc_ad_mor.mig_pmanova,
            D_beta_bc_ad_kmeans_pmanova)
```

Export.

```{r}
write_csv(D_beta_bc_ad_all_pmanova,
          '../Results/Tables/D_beta_bc_ad_all_pmanova.csv')
```

*A. millepora.*

```{r}
# BC distance matrix
D_beta_bc_am_d <- 
  B_beta_its2_df |> 
  rownames_to_column("Colony") |>  
  filter(str_detect(Colony, 'M')) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony") |> 
  vegdist()

# Metadata
D_beta_bc_am_meta <- 
  A_symb_htol_df |> 
  filter(str_detect(Colony, 'M')) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony")

# PERMANOVA
D_beta_bc_am_mor_pmanova <- 
  adonis2(D_beta_bc_am_d ~ mor, 
          data = D_beta_bc_am_meta, 
          permutations = 9999)|> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality-based')

D_beta_bc_am_mig_pmanova <- 
  adonis2(D_beta_bc_am_d ~ mig, 
          data = D_beta_bc_am_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'MIG-based')

D_beta_bc_am_mor.mig_pmanova <- 
  adonis2(D_beta_bc_am_d ~ mor.mig, 
          data = D_beta_bc_am_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality+MIG-based')

D_beta_bc_am_kmeans_pmanova <- 
  adonis2(D_beta_bc_am_d ~ kmeans, 
          data = D_beta_bc_am_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Kmeans-based')

# Merge PERMANOVA data
D_beta_bc_am_all_pmanova <- 
  bind_rows(D_beta_bc_am_mor_pmanova,
            D_beta_bc_am_mig_pmanova,
            D_beta_bc_am_mor.mig_pmanova,
            D_beta_bc_am_kmeans_pmanova)
```

Export.

```{r}
write_csv(D_beta_bc_am_all_pmanova,
          '../Results/Tables/D_beta_bc_am_all_pmanova.csv')
```

*A. tenuis.*

```{r}
# BC distance matrix
D_beta_bc_at_d <- 
  B_beta_its2_df |> 
  rownames_to_column("Colony") |>  
  filter(str_detect(Colony, 'T')) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony") |> 
  vegdist()

# Metadata
D_beta_bc_at_meta <- 
  A_symb_htol_df |> 
  filter(str_detect(Colony, 'T')) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony")

# PERMANOVA
D_beta_bc_at_mor_pmanova <- 
  adonis2(D_beta_bc_at_d ~ mor, 
          data = D_beta_bc_at_meta, 
          permutations = 9999)|> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality-based')

D_beta_bc_at_mig_pmanova <- 
  adonis2(D_beta_bc_at_d ~ mig, 
          data = D_beta_bc_at_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'MIG-based')

D_beta_bc_at_mor.mig_pmanova <- 
  adonis2(D_beta_bc_at_d ~ mor.mig, 
          data = D_beta_bc_at_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality+MIG-based')

D_beta_bc_at_kmeans_pmanova <- 
  adonis2(D_beta_bc_at_d ~ kmeans, 
          data = D_beta_bc_at_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Kmeans-based')

# Merge PERMANOVA data
D_beta_bc_at_all_pmanova <- 
  bind_rows(D_beta_bc_at_mor_pmanova,
            D_beta_bc_at_mig_pmanova,
            D_beta_bc_at_mor.mig_pmanova,
            D_beta_bc_at_kmeans_pmanova)
```

Export.

```{r}
write_csv(D_beta_bc_at_all_pmanova,
          '../Results/Tables/D_beta_bc_at_all_pmanova.csv')
```

### wUni

```{r}
# wUni distance matrix
D_beta_wuni_all_d <- 
  B_beta_its2_df |> 
  rownames_to_column("Colony") |> 
  arrange(Colony) |> 
  column_to_rownames("Colony") |> 
  vegdist()

# Metadata
D_beta_bc_meta <- 
  A_symb_htol_df |> 
  select(!1) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony")



adonis2(D_beta_bc_all_d ~ mor + mig + mor.mig + kmeans, 
          data = D_beta_bc_meta, 
          permutations = 9999)
```

#### Global (all species)

```{r}
D_beta_wuni_all_d <- 
  C_beta_wuni_df |> 
  column_to_rownames("Colony") |> 
  vegdist()
  
D_beta_wuni_meta <- 
  A_symb_htol_df |> 
  arrange(Colony) |> 
  column_to_rownames("Colony")

D_beta_wuni_spec_pmanova <- 
  adonis2(D_beta_wuni_all_d ~ Species,
          data = D_beta_wuni_meta,
          permuations = 9999)
```

Export.

```{r}
write_csv(D_beta_wuni_spec_pmanova,
          '../Results/Tables/D_beta_wuni_spec_pmanova_global.csv')
```

Pairwise.

```{r}
D_beta_wuni_pwis_spec_pmanova <- 
    pairwise.adonis2(D_beta_wuni_all_d ~ Species, 
                     data = D_beta_wuni_meta, 
                     permutations = 9999)
```

Get clean pairwise PERMANOVA results.

```{r}
D_beta_wuni_pwis_spec_pmanova_df <- 
  D_beta_bc_pwis_pmanova_clean_f(D_beta_wuni_pwis_spec_pmanova)
```

```{r}
write_csv(D_beta_wuni_pwis_spec_pmanova_df,
          '../Results/Tables/D_beta_wuni_spec_pmanova_pwise.csv')
```

#### Per species

*A. digitifera.*

```{r}
# Weighted Unifrac distance matrix
D_beta_wuni_ad_d <- 
  C_beta_wuni_ad_d

# Metadata
D_beta_wuni_ad_meta <- 
  A_symb_htol_df |> 
  filter(str_detect(Colony, 'D')) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony")

# PERMANOVA
D_beta_wuni_ad_mor_pmanova <- 
  adonis2(D_beta_wuni_ad_d ~ mor, 
          data = D_beta_wuni_ad_meta, 
          permutations = 9999)|> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality-based')

D_beta_wuni_ad_mig_pmanova <- 
  adonis2(D_beta_wuni_ad_d ~ mig, 
          data = D_beta_wuni_ad_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'MIG-based')

D_beta_wuni_ad_mor.mig_pmanova <- 
  adonis2(D_beta_wuni_ad_d ~ mor.mig, 
          data = D_beta_wuni_ad_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality+MIG-based')

D_beta_wuni_ad_kmeans_pmanova <- 
  adonis2(D_beta_wuni_ad_d ~ kmeans, 
          data = D_beta_wuni_ad_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Kmeans-based')

# Merge PERMANOVA data
D_beta_wuni_ad_all_pmanova <- 
  bind_rows(D_beta_wuni_ad_mor_pmanova,
            D_beta_wuni_ad_mig_pmanova,
            D_beta_wuni_ad_mor.mig_pmanova,
            D_beta_wuni_ad_kmeans_pmanova)
```

Export.

```{r}
write_csv(D_beta_wuni_ad_all_pmanova,
          '../Results/Tables/D_beta_wuni_ad_all_pmanova.csv')
```

*A. millepora.*

```{r}
# Weighted Unifrac distance matrix
D_beta_wuni_am_d <- 
  C_beta_wuni_am_d

# Metadata
D_beta_wuni_am_meta <- 
  A_symb_htol_df |> 
  filter(str_detect(Colony, 'M')) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony")

# PERMANOVA
D_beta_wuni_am_mor_pmanova <- 
  adonis2(D_beta_wuni_am_d ~ mor, 
          data = D_beta_wuni_am_meta, 
          permutations = 9999)|> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality-based')

D_beta_wuni_am_mig_pmanova <- 
  adonis2(D_beta_wuni_am_d ~ mig, 
          data = D_beta_wuni_am_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'MIG-based')

D_beta_wuni_am_mor.mig_pmanova <- 
  adonis2(D_beta_wuni_am_d ~ mor.mig, 
          data = D_beta_wuni_am_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality+MIG-based')

D_beta_wuni_am_kmeans_pmanova <- 
  adonis2(D_beta_wuni_am_d ~ kmeans, 
          data = D_beta_wuni_am_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Kmeans-based')

# Merge PERMANOVA data
D_beta_wuni_am_all_pmanova <- 
  bind_rows(D_beta_wuni_am_mor_pmanova,
            D_beta_wuni_am_mig_pmanova,
            D_beta_wuni_am_mor.mig_pmanova,
            D_beta_wuni_am_kmeans_pmanova)
```

Export.

```{r}
write_csv(D_beta_wuni_am_all_pmanova,
          '../Results/Tables/D_beta_wuni_am_all_pmanova.csv')
```

*A. tenuis.*

```{r}
# Weighted Unifrac distance matrix
D_beta_wuni_at_d <- 
  C_beta_wuni_at_d

# Metadata
D_beta_wuni_at_meta <- 
  A_symb_htol_df |> 
  filter(str_detect(Colony, 'T')) |> 
  arrange(Colony) |> 
  column_to_rownames("Colony")

# PERMANOVA
D_beta_wuni_at_mor_pmanova <- 
  adonis2(D_beta_wuni_at_d ~ mor, 
          data = D_beta_wuni_at_meta, 
          permutations = 9999)|> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality-based')

D_beta_wuni_at_mig_pmanova <- 
  adonis2(D_beta_wuni_at_d ~ mig, 
          data = D_beta_wuni_at_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'MIG-based')

D_beta_wuni_at_mor.mig_pmanova <- 
  adonis2(D_beta_wuni_at_d ~ mor.mig, 
          data = D_beta_wuni_at_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Mortality+MIG-based')

D_beta_wuni_at_kmeans_pmanova <- 
  adonis2(D_beta_wuni_at_d ~ kmeans, 
          data = D_beta_wuni_at_meta, 
          permutations = 9999) |> 
  rownames_to_column('Stats') |> 
  mutate(Basis = 'Kmeans-based')

# Merge PERMANOVA data
D_beta_wuni_at_all_pmanova <- 
  bind_rows(D_beta_wuni_at_mor_pmanova,
            D_beta_wuni_at_mig_pmanova,
            D_beta_wuni_at_mor.mig_pmanova,
            D_beta_wuni_at_kmeans_pmanova)
```

Export.

```{r}
write_csv(D_beta_wuni_at_all_pmanova,
          '../Results/Tables/D_beta_wuni_at_all_pmanova.csv')
```

Only *A. tenuis* clustered based on heat tolerance classification. Do pairwise testing.

```{r}
# Do pairwise PERMANOVA
D_beta_wuni_pwis_htol_mig_at_pmanova <- 
    pairwise.adonis2(D_beta_wuni_at_d ~ mig, 
                     data = D_beta_wuni_at_meta, 
                     permutations = 9999)

D_beta_wuni_pwis_htol_mor.mig_at_pmanova <- 
    pairwise.adonis2(D_beta_wuni_at_d ~ mor.mig, 
                     data = D_beta_wuni_at_meta, 
                     permutations = 9999)

# Clean pairwise PERMANOVA
D_beta_wuni_pwis_htol_mig_at_pmanova_df <- 
  D_beta_bc_pwis_pmanova_clean_f(D_beta_wuni_pwis_htol_mig_at_pmanova)

D_beta_wuni_pwis_htol_mor.mig_at_pmanova_df <- 
  D_beta_bc_pwis_pmanova_clean_f(D_beta_wuni_pwis_htol_mor.mig_at_pmanova)
```

Export.

```{r}
write_csv(D_beta_wuni_pwis_htol_mig_at_pmanova_df,
          '../Results/Tables/D_beta_wuni_at_htol-mig_pmanova_pwise.csv')

write_csv(D_beta_wuni_pwis_htol_mor.mig_at_pmanova_df,
          '../Results/Tables/D_beta_wuni_at_htol-mor.mig_pmanova_pwise.csv')
```

## E: PERMDISP

Only global, all species for both BC and wUni had differences in community composition. Confirm if this is not due to dispersion of data points using PERMDISP.

### BC

```{r}
# Global
E_beta_bc_spec_permdisp <- 
  anova(betadisper(D_beta_bc_all_d, D_beta_bc_meta |> pull(Species)))

# Pairwise
E_beta_bc_spec_permdisp_pwise <- 
  TukeyHSD(betadisper(D_beta_bc_all_d, D_beta_bc_meta |> pull(Species)))$group |> 
  as.data.frame() |> 
  rownames_to_column('Comparison')
```

Export.

```{r}
write_csv(E_beta_bc_spec_permdisp,
          '../Results/Tables/E_beta_bc_spec_permdisp.csv')

write_csv(E_beta_bc_spec_permdisp_pwise,
          '../Results/Tables/E_beta_bc_spec_permdisp_pwise.csv')
```

### wUni

```{r}
# Global
E_beta_wuni_spec_permdisp <- 
  anova(betadisper(D_beta_wuni_all_d, D_beta_wuni_meta |> pull(Species)))

# Pairwise
E_beta_wuni_spec_permdisp_pwise <- 
  TukeyHSD(betadisper(D_beta_wuni_all_d, D_beta_wuni_meta |> pull(Species)))$group |> 
  as.data.frame() |> 
  rownames_to_column('Comparison')
```

Export.

```{r}
write_csv(E_beta_wuni_spec_permdisp,
          '../Results/Tables/E_beta_wuni_spec_permdisp.csv')

write_csv(E_beta_wuni_spec_permdisp_pwise,
          '../Results/Tables/E_beta_wuni_spec_permdisp_pwise.csv')
```

# F: Taxonomy barplots

## ITS2 sequences

Get total number of sequences and get top 10 based on number of reads.

```{r}
# Get total number of reads per ITS2 sequence
F_bar_its2_sum <- 
  A_symb_its2_df |> 
  pivot_longer(cols = !c(1,2),
               names_to = 'ITS2 sequence',
               values_to = 'Read count') |> 
  select(!Species) |> 
  pivot_wider(names_from = Colony,
              values_from = `Read count`) |>
  rowwise() |> 
  mutate('Total reads' = sum(c_across(where(is.numeric)))) |> 
  arrange(desc(`Total reads`)) %>%
  add_column(Group = c(1:10, replicate(length(.$`ITS2 sequence`)-10,"Others")))

# Clean data
F_bar_its2_sum_summ <- 
  F_bar_its2_sum |> 
  mutate(`ITS2 sequence` = case_when(Group == 'Others' ~ 'Others',
                                     .default = `ITS2 sequence`)) |> 
  select(!c("Total reads","Group" )) |> 
  group_by(`ITS2 sequence`) |> 
  summarise(across(everything(), sum)) |> 
  ungroup() |> 
  rowwise() |> 
  mutate("Total reads" = sum(c_across(T14:D09))) |> 
  select(!`Total reads`)

# Arrenge legend from top to bottom
F_bar_its2_top11_c <- 
  F_bar_its2_sum_summ |> 
  pull(`ITS2 sequence`) 
  
F_bar_its2_top11_manual_c <- 
  c("C3u","C3","C3xu","C115","C21ab","C3xt","C3xv","22573_C","21841_C","C3ge", "Others")

# Remove non-top 10 ITS2 sequence
F_bar_its2_top10_df <-
  F_bar_its2_sum_summ |> 
  pivot_longer(cols = !1,
               names_to = 'Colony',
               values_to = 'Read count')

# Add metadata
F_bar_its2_top10_meta_df <- 
  F_bar_its2_top10_df |> 
  left_join(A_symb_htol_df)

# Arrange legend
F_bar_its2_top10_meta_df$`ITS2 sequence` <- 
  factor(F_bar_its2_top10_meta_df$`ITS2 sequence`, 
         levels = F_bar_its2_top11_manual_c)

# Make a list of preferred colors
F_bar_its2_color_c <- 
  c("#052405","#315132","#486949","#618361","#93AF93"
    ,"#B8D0B8","#CAF0CA","#E8F8E8","#80350E","#C04F15",
    "darkgray")
```

Make plot for ITS2 sequences.

```{r}
F_bar_its2_top10_p <- 
  F_bar_its2_top10_meta_df |> 
  ungroup() |> 
  mutate(Colony = reorder_within(Colony, 
                                 desc(`Combined survival and MIG`),
                                 Species)) |> 
  ggplot(aes(fill = `ITS2 sequence`,
             x = Colony,
             y = `Read count`)) +
  geom_bar(position = 'fill',
           stat = 'identity',
           width = 1) + 
  facet_grid(cols = vars(Species),
             space = 'free',
             scale = 'free') +
  scale_y_continuous(expand = c(0,0)) +
  scale_x_reordered() +
  scale_fill_manual(values = F_bar_its2_color_c) +
  theme(panel.grid = element_blank(),
        strip.background = element_blank(),
        axis.line = element_line(),
        panel.background = element_rect(fill = '#F5F5F5'),
        panel.grid.major.y = element_line(colour = 'white'
                                          ,linewidth = 0.75),
        panel.grid.minor.y = element_line(colour = 'white',
                                          linewidth = 0.25),
        panel.grid.major.x = element_line(colour = 'white',
                                          linewidth = 0.75),
        panel.grid.minor.x = element_line(colour = 'white',
                                          linewidth = 0.25),
        strip.text = element_text(face = 'italic'),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```

Make plot for heat tolerance labels.

```{r}
F_tile_htol_df <- 
  A_symb_htol_df |> 
  select(c(Species, Colony, `Survival+MIG-based ranking`, mor.mig)) |> 
  mutate(y = 1)

F_tile_htol_p <- 
  F_tile_htol_df |> 
  mutate(Colony = reorder_within(Colony, 
                                 desc(`Survival+MIG-based ranking`),
                                 Species)) |> 
  ggplot(aes(x = Colony,
             y = y,
             fill = mor.mig)) + 
  geom_tile() +
  facet_grid(cols = vars(Species),
             space = 'free',
             scale = 'free') +
  scale_x_reordered() +
  scale_y_continuous(expand = c(0,0)) +
  scale_fill_manual(values = color_htol_int_c) +
  theme(axis.title = element_blank(), 
        axis.ticks = element_blank(), 
        axis.text = element_blank(),
        strip.background = element_blank(),
        strip.text = element_blank(),
        panel.background = element_blank())
```

Make plot for ITS2 profile.

```{r}
F_bar_its2prof_df <- 
  A_symb_prof_df |> 
  pivot_longer(cols = !c(1,2),
               values_to = "Count",
               names_to = "ITS2 Profile") |> 
  left_join(A_symb_htol_df)

F_bar_its2prof_p <- 
  F_bar_its2prof_df |> 
  mutate(Colony = reorder_within(Colony, 
                                 desc(`Survival+MIG-based ranking`),
                                 Species)) |> 
  ggplot(aes(x = Colony,
             y = Count,
             fill = `ITS2 Profile`)) + 
  geom_bar(position = 'fill',
           stat = 'identity',
           width = 1) +
  facet_grid(cols = vars(Species),
             space = 'free',
             scale = 'free') +
  scale_fill_manual(values = color_its2prof_c) +
  scale_x_reordered() +
  scale_y_continuous(expand = c(0,0)) +
  theme(axis.title = element_blank(), 
        axis.ticks = element_blank(), 
        axis.text = element_blank(),
        strip.background = element_blank(),
        strip.text = element_blank(),
        panel.background = element_blank())
```

```{r}
plot_grid(nrow = 3,
          F_bar_its2_top10_p + theme(legend.position = 'none'),
          F_tile_htol_p + theme(legend.position = 'none'),
          F_bar_its2prof_p + theme(legend.position = 'none'),
          axis = 'tblr',
          align = 'hv',
          rel_heights = c(1,0.5,0.5))
```

```{r}
F_hmap_its2_top10_p <- 
  F_bar_its2_top10_meta_df |> 
  ungroup() |> 
  mutate(Colony = reorder_within(Colony, 
                                 desc(`Combined survival and MIG`),
                                 Species)) |> 
  mutate(`Read count` = log(`Read count` + 1)) |> 
  ggplot(aes(x = Colony,
             y = `ITS2 sequence`)) +
  geom_tile(aes(fill = `Read count`),
            color = 'white',
            linewidth = 0.1) + 
  facet_grid(cols = vars(Species),
             space = 'free',
             scale = 'free') +
  scale_x_reordered() +
  scale_fill_distiller(direction = 1,
                       palette = 'Greens') +
  theme(panel.grid = element_blank(),
        strip.background = element_blank(),
        axis.line = element_line(),
        panel.background = element_rect(fill = '#F5F5F5'),
        panel.grid.major.y = element_line(colour = 'white'
                                          ,linewidth = 0.75),
        panel.grid.minor.y = element_line(colour = 'white',
                                          linewidth = 0.25),
        panel.grid.major.x = element_line(colour = 'white',
                                          linewidth = 0.75),
        panel.grid.minor.x = element_line(colour = 'white',
                                          linewidth = 0.25),
        strip.text = element_text(face = 'italic'),
        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```

```{r}
F_bar_its2_count_p <- 
  F_bar_its2_top10_meta_df |> 
  group_by(`ITS2 sequence`) |> 
  summarise(`Read count` = sum(`Read count`)) |> 
  ggplot(aes(y = `ITS2 sequence`,
             x = `Read count`)) +
  geom_col()
```

```{r}

```
